CREATE OR REPLACE TRIGGER "Check_num_taken"
BEFORE INSERT ON QUIZ_TAKEN_TABLE
FOR EACH ROW
DECLARE COUNT_TAKEN INT;
        MAX_NUMBER_TAKEN INT;
BEGIN
  SELECT COUNT(*)
  INTO COUNT_TAKEN
  FROM QUIZ_TAKEN_TABLE
  WHERE QUIZ_TAKEN_TABLE.QUIZID = :NEW.QUIZID AND QUIZ_TAKEN_TABLE.STUDENTID = :NEW.STUDENTID;

  SELECT MAX_NUMBERTAKEN
  INTO MAX_NUMBER_TAKEN
  FROM QUIZ_TABLE
  WHERE QUIZ_TABLE.QUIZID = :NEW.QUIZID;
  --DBMS_OUTPUT.PUT_LINE(MAX_NUMBER_TALEN);
  
  IF (COUNT_TAKEN >= MAX_NUMBER_TAKEN) THEN RAISE_APPLICATION_ERROR(-20001, 'MAX number test taken');
  END IF;
END;
/
CREATE SEQUENCE Tmajor_id_seq;
CREATE OR REPLACE TRIGGER "Tmajor_id" 
BEFORE INSERT ON TMajor_table 
FOR EACH ROW

BEGIN
  SELECT Tmajor_id_seq.NEXTVAL
  INTO   :new.MajorID
  FROM   dual;
END;
/
CREATE SEQUENCE Tdegree_id_seq;
CREATE OR REPLACE TRIGGER "TDegree_id"
BEFORE INSERT ON TDegree_table 
FOR EACH ROW

BEGIN
  SELECT Tdegree_id_seq.NEXTVAL
  INTO   :new.DegreeID
  FROM   dual;
END;
/
CREATE SEQUENCE Tag_id_seq;
CREATE OR REPLACE TRIGGER "Tag_id" 
BEFORE INSERT ON Tag_table 
FOR EACH ROW

BEGIN
  SELECT Tag_id_seq.NEXTVAL
  INTO   :new.TagId
  FROM   dual;
END;
/